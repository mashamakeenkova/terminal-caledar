#!/usr/bin/env sh

day=$(date +%a)
month=$(date +%B)
day_full=$(date +%A)
day_of_month=$(date +%d)

bold=$(tput bold)
reset=$(tput sgr0)


clear_data() {
    current_date=$(date +%m/%d/%Y)
    file="data"
    temp_file="temp_data"
    touch "$temp_file"

    if [ -e "$file" ]; then
        while IFS=';' read -r date_in_file event urgency; do
            formatted_date=$(date -d "$date_in_file" +%m/%d/%Y)
            if [ "$formatted_date" \> "$current_date" ]; then
                echo "$date_in_file;$event;$urgency" >> "$temp_file"
            fi

            if [ "$formatted_date" == "$current_date" ]; then
                echo "$date_in_file;$event;$urgency" >> "$temp_file"
            fi
    done < "$file"
    mv "$temp_file" "$file"
    else
        echo "ERROR: data file not found!"
    fi
}

clear_all_data() {
    echo "are you sure you want to delete all scheduled events y/n?"
    while true; do
        read -s -n 1 key
        case $key in
            y|Y)
                echo "clearing all scheduled events"
                truncate -s 0 "data"
                exit 0
                ;;
            n|N)
                echo "cancelled"
                exit 0
                ;;
            *)
                echo "please type y/n"
        esac
    done
}

process_data() {
  #format: dd/mm/yyyy;<event>;[U|n]
  current_date=$(date +%m/%d/%Y)
  file="data"
  if [ -e "$file" ]; then
    while IFS= read -r line; do
        IFS=';' read -r date_in_file event urgency ignored <<< "$line"
            if [ "$date_in_file" == "$current_date" ]; then
                if [ "$urgency" == "U" ]; then
                    echo "$bold   (URGENT) $event $reset"
                else
                    if [ "$urgency" == "u" ]; then
                        echo "   (URGENT) $event"
                    else
                        echo "   $event"
                    fi
                fi
            fi
    done < "$file"
  else
    echo "File not found: $file"
  fi
}


if [ "$1" = "--help" ]; then
    echo "$bold Don't panic! Here's how it works: $reset"
    echo "--help: prints this helpful message"
    echo "--add mm/dd/yyy event [string] urgency [U|u|n]: adds event to reminders"
    echo "   urgency options: n neutral, u urgent, U very urgent"
    echo "--clear: clears all scheduled events"
fi

if [ "$1" = "--clear" ]; then
    clear_all_data
fi


if [ "$1" = "--add" ]; then
    date_user=$2
    event_user=$3
    urgency=$4
    if date -d "$date_user" "+%m/%d/%Y" >/dev/null 2>&1; then
        date_write="date_user"
    else
        echo "ERROR: wrong date format: expected mm/dd/yyyy"
        echo "use --help option for usage"
        exit 0
    fi

    if [[ "$urgency" = "u" || "$urgency" = "n" ]]; then
       urgency_write="$urgency"
       else
           if [[ "$urgency" = "U" ]]; then
               urgency_write="$urgency"
           else
               echo "ERROR: unexpected urgency string:"$urgency", expected U, u or n"
               echo "use --help option for usage"
               exit 0
           fi
    fi

    echo "$date_user;$event_user;$urgency" >> data
    echo "evnet has been added"
fi

if [ -z "$1" ]; then
    echo "$bold Greetings Master, today is $day_full, $month $day_of_month. $reset"
    echo " On the agenda today: "

    case $day in
        "Mon")
        echo "   08:00 - 12:00 Applied Computer Architecture"
        echo "   16:00 - 19:00 Compiler Design exercise"
        process_data
        clear_data
        ;;
        "Wed")
        echo "   10:00 - 12:00 Fundamentals of Web Engineering"
        echo "   13:00 - 15:00 Computer Architecture"
        process_data
        clealr_data
        ;;
        "Tue")
        echo "    -> TODO: watch Computer Systems lecure"
        process_data
        clear_data
        ;;
        "Thu")
        echo "    -> TODO: watch Compiler Design lecture"
        process_data
        clear_data
        ;;
        "Fri")
        echo "   10:00 - 12:00 Computer Systems"
        echo "   14:00 - 16:00 Compiler Design"
        process_data
        clear_data
        ;;
        "Sat")
        echo "   10:00 - 14:00 Longsword Practice"
        process_data
        clear_data
        ;;
        "Sun")
        echo "   T'is Sunday, nothing on."
        process_data
        clear_data
        ;;
        *)
        echo "what is this"
        ;;
 esac
fi
